apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage-config
  namespace: homepage
data:
  settings.yaml: |
    title: Homelab Dashboard
    favicon: https://gethomepage.dev/img/favicon.ico
    theme: dark
    color: slate
    headerStyle: boxed
    layout:
      Infrastructure:
        style: row
        columns: 3
      Applications:
        style: row
        columns: 3
  skeleton-settings.yaml: |
    title: Homelab Dashboard
    favicon: https://gethomepage.dev/img/favicon.ico
    theme: dark
    color: slate
    headerStyle: boxed
    layout:
      Infrastructure:
        style: row
        columns: 3
      Applications:
        style: row
        columns: 3
  services.yaml: |
    # Services with ingresses will be automatically discovered via annotations
    # Only add services here that don't have ingresses or need special configuration
    
    - Infrastructure:
        - Argo CD:
            href: https://argo.buildin.group
            description: GitOps Continuous Delivery
            icon: argocd
        - Longhorn:
            href: https://longhorn.buildin.group
            description: Distributed Block Storage
            icon: longhorn
        - Kubernetes Dashboard:
            href: https://dashboard.buildin.group
            description: Kubernetes Management
            icon: kubernetes-dashboard

    - Monitoring:
        - Prometheus:
            href: https://prometheus.buildin.group
            description: Metrics Collection
            icon: prometheus
        - Grafana:
            href: https://grafana.buildin.group
            description: Monitoring Dashboards
            icon: grafana

    # Note: Applications with ingress annotations will be automatically discovered
    # The following are examples of services that might not have ingresses:
    # - n8n (if using Cloudflare tunnel)
    # - Other services without ingress
  widgets.yaml: |
    - logo:
        icon: https://gethomepage.dev/img/favicon.ico
    - greeting:
        text_size: xl
        text: "Welcome to your Homelab!"
    - datetime:
        text_size: l
        format:
          dateStyle: long
          timeStyle: short
          hour12: false
    - openmeteo:
        label: Weather
        latitude: 40.7589
        longitude: -73.9851
        timezone: America/New_York
        cache: 5
  bookmarks.yaml: |
    - Homelab:
        - Documentation:
            - href: https://kubernetes.io/docs/
              icon: kubernetes
        - Repositories:
            - href: https://github.com/
              icon: github
        - Monitoring:
            - href: https://grafana.com/
              icon: grafana
  docker.yaml: |
    # Docker integration disabled for K8s deployment
  kubernetes.yaml: |
    mode: cluster
    ingress: true
    traefik: true
    # Enable only if Gateway API CRDs are installed in the cluster
    gateway: false
    # Resource monitoring configuration
    resources:
      enabled: true
      cpu: true
      memory: true
  custom.css: |
    /* Custom CSS for Homepage */
    /* Add your custom styles here */
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: homepage
  labels:
    app: homepage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homepage
  template:
    metadata:
      labels:
        app: homepage
    spec:
      serviceAccountName: homepage
      initContainers:
        - name: init-config
          image: busybox:1.37
          command: ['sh', '-c', 'mkdir -p /writable-config/src/skeleton && cp /config/skeleton-settings.yaml /writable-config/src/skeleton/settings.yaml && cp /config/*.yaml /writable-config/']
          volumeMounts:
            - name: config
              mountPath: /config
            - name: writable-config
              mountPath: /writable-config
      containers:
        - name: homepage
          image: ghcr.io/gethomepage/homepage:v1.5
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: HOMEPAGE_VAR_TITLE
              value: "Homelab Dashboard"
            - name: HOMEPAGE_VAR_SEARCH_PROVIDER
              value: "duckduckgo"
            - name: HOMEPAGE_VAR_HEADER_STYLE
              value: "boxed"
            - name: HOMEPAGE_VAR_WEATHER_API_KEY
              value: "" # Add your weather API key if desired
            - name: HOMEPAGE_ALLOWED_HOSTS
              value: "*"
          volumeMounts:
            - name: writable-config
              mountPath: /app/config
            - name: logs
              mountPath: /app/config/logs
          resources:
            limits:
              memory: 512Mi
              cpu: 200m
            requests:
              memory: 256Mi
              cpu: 100m
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: config
          configMap:
            name: homepage-config
        - name: writable-config
          emptyDir: {}
        - name: logs
          emptyDir: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: homepage
  labels:
    app: homepage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
    verbs:
      - get
      - list
  - apiGroups:
      - traefik.io
    resources:
      - ingressroutes
    verbs:
      - get
      - list
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - get
      - list
  - apiGroups:
      - metrics.k8s.io
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: homepage
