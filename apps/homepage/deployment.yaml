apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage-config
  namespace: homepage
data:
  settings.yaml: |
    title: Homelab Dashboard
    favicon: https://gethomepage.dev/img/favicon.ico
    theme: dark
    color: slate
    headerStyle: boxed
    layout:
      Infrastructure:
        style: row
        columns: 3
      Applications:
        style: row
        columns: 3
  skeleton-settings.yaml: |
    title: Homelab Dashboard
    favicon: https://gethomepage.dev/img/favicon.ico
    theme: dark
    color: slate
    headerStyle: boxed
    layout:
      Infrastructure:
        style: row
        columns: 3
      Applications:
        style: row
        columns: 3
  services.yaml: |
    # Services with ingresses will be automatically discovered via annotations
    # Only add services here that don't have ingresses or need special configuration
    
    - Infrastructure:
        - Argo CD:
            href: https://argo.buildin.group
            description: GitOps Continuous Delivery
            icon: argocd
        - Longhorn:
            href: https://longhorn.buildin.group
            description: Distributed Block Storage
            icon: longhorn
        - Kubernetes Dashboard:
            href: https://dashboard.buildin.group
            description: Kubernetes Management
            icon: kubernetes-dashboard

    - Monitoring:
        - Prometheus:
            href: https://prometheus.buildin.group
            description: Metrics Collection
            icon: prometheus
        - Grafana:
            href: https://grafana.buildin.group
            description: Monitoring Dashboards
            icon: grafana

    # Note: Applications with ingress annotations will be automatically discovered
    # The following are examples of services that might not have ingresses:
    # - n8n (if using Cloudflare tunnel)
    # - Other services without ingress
  widgets.yaml: |
    - logo:
        icon: https://gethomepage.dev/img/favicon.ico
    - greeting:
        text_size: xl
        text: "Welcome to your Homelab!"
    - datetime:
        text_size: l
        format:
          dateStyle: long
          timeStyle: short
          hour12: false
    - kubernetes:
        cluster:
          show: true
          cpu: true
          memory: true
          showLabel: true
          label: "cluster"
        nodes:
          show: true
          cpu: true
          memory: true
          showLabel: true
    - resources:
        backend: resources
        expanded: true
        cpu: true
        memory: true
        network: default
    - search:
        provider: duckduckgo
        target: _blank
    - openmeteo:
        label: Weather
        latitude: 40.7589
        longitude: -73.9851
        timezone: America/New_York
        cache: 5
  bookmarks.yaml: |
    - Homelab:
        - Documentation:
            - href: https://kubernetes.io/docs/
              icon: kubernetes
        - Repositories:
            - href: https://github.com/
              icon: github
        - Monitoring:
            - href: https://grafana.com/
              icon: grafana
  docker.yaml: |
    # Docker integration disabled for K8s deployment
  kubernetes.yaml: |
    mode: cluster
    ingress: true
    traefik: true
    # Enable only if Gateway API CRDs are installed in the cluster
    gateway: false
  custom.css: |
    /* Custom CSS for Homepage */
    /* Add your custom styles here */
  custom.js: |
    // Custom JavaScript for Homepage
    // Add your custom scripts here
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: homepage
  labels:
    app: homepage
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: homepage
  template:
    metadata:
      labels:
        app: homepage
    spec:
      serviceAccountName: homepage
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: homepage
          image: "ghcr.io/gethomepage/homepage:latest"
          imagePullPolicy: Always
          env:
            - name: HOMEPAGE_ALLOWED_HOSTS
              value: "*"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /app/config/custom.js
              name: homepage-config
              subPath: custom.js
            - mountPath: /app/config/custom.css
              name: homepage-config
              subPath: custom.css
            - mountPath: /app/config/bookmarks.yaml
              name: homepage-config
              subPath: bookmarks.yaml
            - mountPath: /app/config/docker.yaml
              name: homepage-config
              subPath: docker.yaml
            - mountPath: /app/config/kubernetes.yaml
              name: homepage-config
              subPath: kubernetes.yaml
            - mountPath: /app/config/services.yaml
              name: homepage-config
              subPath: services.yaml
            - mountPath: /app/config/settings.yaml
              name: homepage-config
              subPath: settings.yaml
            - mountPath: /app/config/widgets.yaml
              name: homepage-config
              subPath: widgets.yaml
            - mountPath: /app/config/logs
              name: logs
          resources:
            limits:
              memory: 512Mi
              cpu: 200m
            requests:
              memory: 256Mi
              cpu: 100m
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: homepage-config
          configMap:
            name: homepage-config
        - name: logs
          emptyDir: {}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: homepage
  namespace: homepage
  labels:
    app: homepage
  annotations:
    kubernetes.io/service-account.name: homepage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: homepage
  labels:
    app: homepage
secrets:
  - name: homepage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
  labels:
    app: homepage
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
    verbs:
      - get
      - list
  - apiGroups:
      - traefik.io
    resources:
      - ingressroutes
    verbs:
      - get
      - list
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - get
      - list
  - apiGroups:
      - metrics.k8s.io
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
  labels:
    app: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: homepage
