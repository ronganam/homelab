apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkwarden
  namespace: linkwarden
  labels:
    app: linkwarden
spec:
  replicas: 1
  strategy:
    type: Recreate # Use Recreate for apps with persistent storage
  selector:
    matchLabels:
      app: linkwarden
  template:
    metadata:
      labels:
        app: linkwarden
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: linkwarden
          image: ghcr.io/linkwarden/linkwarden:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: NEXTAUTH_URL
              value: "http://linkwarden.buildin.group/api/v1/auth"
            - name: NEXTAUTH_SECRET
              value: "NaCT7ElF5tjzyuCzGRg9XEZJm3EA+hS/xtkaQW9tlDc="
            - name: DATABASE_URL
              value: "postgresql://postgres:jBbbmg7Oualv1mianInwf8yL/LIKvBax1IUQF3EeD/M=@postgres:5432/postgres"
            - name: MEILI_HOST
              value: "http://meilisearch:7700"
            - name: MEILI_MASTER_KEY
              value: "eLUeQkS4pQgHyoT0916a2gC/xpLNJghcOj3hacfqpAY="
          volumeMounts:
            - name: data
              mountPath: /data/data
          resources:
            limits:
              memory: 1Gi
              cpu: 500m
            requests:
              memory: 256Mi
              cpu: 100m
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
        - name: postgres
          image: postgres:16-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_PASSWORD
              value: "jBbbmg7Oualv1mianInwf8yL/LIKvBax1IUQF3EeD/M="
            - name: POSTGRES_DB
              value: "postgres"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          resources:
            limits:
              memory: 512Mi
              cpu: 200m
            requests:
              memory: 128Mi
              cpu: 50m
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
        - name: meilisearch
          image: getmeili/meilisearch:v1.12.8
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 7700
              name: meilisearch
          env:
            - name: MEILI_MASTER_KEY
              value: "eLUeQkS4pQgHyoT0916a2gC/xpLNJghcOj3hacfqpAY="
          volumeMounts:
            - name: meili-data
              mountPath: /meili_data
          resources:
            limits:
              memory: 512Mi
              cpu: 200m
            requests:
              memory: 128Mi
              cpu: 50m
          livenessProbe:
            httpGet:
              path: /health
              port: meilisearch
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: meilisearch
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: linkwarden-data
        - name: postgres-data
          persistentVolumeClaim:
            claimName: linkwarden-postgres-data
        - name: meili-data
          persistentVolumeClaim:
            claimName: linkwarden-meili-data
---
# PersistentVolumeClaim for Linkwarden data storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: linkwarden-data
  namespace: linkwarden
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: longhorn
---
# PersistentVolumeClaim for PostgreSQL data storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: linkwarden-postgres-data
  namespace: linkwarden
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
  storageClassName: longhorn
---
# PersistentVolumeClaim for MeiliSearch data storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: linkwarden-meili-data
  namespace: linkwarden
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: longhorn
