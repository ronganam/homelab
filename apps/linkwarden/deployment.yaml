apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkwarden
  namespace: linkwarden
  labels:
    app: linkwarden
spec:
  replicas: 1
  strategy:
    type: Recreate # Use Recreate for apps with persistent storage
  selector:
    matchLabels:
      app: linkwarden
  template:
    metadata:
      labels:
        app: linkwarden
    spec:
      securityContext:
        fsGroup: 999
        fsGroupChangePolicy: OnRootMismatch
      initContainers:
        - name: prepare-cache-dirs
          image: ghcr.io/linkwarden/linkwarden:latest
          securityContext:
            runAsUser: 0
          command: ["/bin/sh","-c"]
          args: ["mkdir -p /data/data/next-cache /data/data/.cache /data/data/playwright && chown -R 1000:1000 /data/data"]
          volumeMounts:
            - name: data
              mountPath: /data/data
        - name: install-playwright-browsers
          image: ghcr.io/linkwarden/linkwarden:latest
          securityContext:
            runAsUser: 0
          env:
            - name: PLAYWRIGHT_BROWSERS_PATH
              value: "/data/data/playwright"
            - name: XDG_CACHE_HOME
              value: "/data/data/.cache"
          command: ["/bin/sh","-c"]
          args: ["(yarn playwright install --with-deps || npx playwright install --with-deps) || true"]
          volumeMounts:
            - name: data
              mountPath: /data/data
      containers:
        - name: linkwarden
          image: ghcr.io/linkwarden/linkwarden:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: NEXTAUTH_URL
              value: "http://linkwarden.buildin.group/api/v1/auth"
            - name: NEXTAUTH_SECRET
              value: "8a957534ef6612c0a503d8a9c77b0236a31b0d7a4cc414950b088dec0a7ea29b"
            - name: DATABASE_URL
              value: "postgresql://postgres:f3600d57313c7ab42cadc4d21e4a1d71a704b657aa5b05378de3097cf8fa2813@localhost:5432/postgres"
            - name: MEILI_HOST
              value: "http://localhost:7700"
            - name: MEILI_MASTER_KEY
              value: "cc8b0f2bc7735d25cbb0f9456b362811f700fad75e0277364987c787c5829b9e"
            - name: PLAYWRIGHT_BROWSERS_PATH
              value: "/data/data/playwright"
            - name: XDG_CACHE_HOME
              value: "/data/data/.cache"
            - name: NEXT_CACHE_DIR
              value: "/data/data/next-cache"
          volumeMounts:
            - name: data
              mountPath: /data/data
          resources:
            limits:
              memory: 1Gi
              cpu: 500m
            requests:
              memory: 256Mi
              cpu: 100m
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
        - name: postgres
          image: postgres:16-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_PASSWORD
              value: "f3600d57313c7ab42cadc4d21e4a1d71a704b657aa5b05378de3097cf8fa2813"
            - name: POSTGRES_DB
              value: "postgres"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          resources:
            limits:
              memory: 512Mi
              cpu: 200m
            requests:
              memory: 128Mi
              cpu: 50m
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
        - name: meilisearch
          image: getmeili/meilisearch:v1.12.8
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 7700
              name: meilisearch
          env:
            - name: MEILI_MASTER_KEY
              value: "cc8b0f2bc7735d25cbb0f9456b362811f700fad75e0277364987c787c5829b9e"
          volumeMounts:
            - name: meili-data
              mountPath: /meili_data
          resources:
            limits:
              memory: 512Mi
              cpu: 200m
            requests:
              memory: 128Mi
              cpu: 50m
          livenessProbe:
            httpGet:
              path: /health
              port: meilisearch
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: meilisearch
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: linkwarden-data
        - name: postgres-data
          persistentVolumeClaim:
            claimName: linkwarden-postgres-data
        - name: meili-data
          persistentVolumeClaim:
            claimName: linkwarden-meili-data
---
# PersistentVolumeClaim for Linkwarden data storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: linkwarden-data
  namespace: linkwarden
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: longhorn
---
# PersistentVolumeClaim for PostgreSQL data storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: linkwarden-postgres-data
  namespace: linkwarden
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
  storageClassName: longhorn
---
# PersistentVolumeClaim for MeiliSearch data storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: linkwarden-meili-data
  namespace: linkwarden
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: longhorn
