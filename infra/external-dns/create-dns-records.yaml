---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-cloudflare-dns-records
  namespace: external-dns
spec:
  template:
    spec:
      containers:
      - name: cloudflare-dns-creator
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          # Get Cloudflare API token
          API_TOKEN=$(cat /etc/cloudflare/token)
          ZONE_ID=$(cat /etc/zone/zone-id)
          
          # Cloudflare IPs (you can use any Cloudflare IP)
          CLOUDFLARE_IP="104.16.0.1"
          
          # Function to create DNS record
          create_dns_record() {
            local hostname=$1
            echo "Creating DNS record for $hostname -> $CLOUDFLARE_IP"
            
            curl -X POST "https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records" \
              -H "Authorization: Bearer $API_TOKEN" \
              -H "Content-Type: application/json" \
              --data "{
                \"type\": \"A\",
                \"name\": \"$hostname\",
                \"content\": \"$CLOUDFLARE_IP\",
                \"ttl\": 300,
                \"comment\": \"Created by Kubernetes Job\"
              }"
            echo ""
          }
          
          # Create DNS records
          create_dns_record "homepage.buildin.group"
          create_dns_record "n9n.buildin.group"
          create_dns_record "argocd.buildin.group"
          create_dns_record "longhorn.buildin.group"
          
          echo "DNS records created successfully!"
        env:
        - name: CF_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: cloudflare-api-token
              key: api-token
        - name: CLOUDFLARE_ZONE_ID
          valueFrom:
            configMapKeyRef:
              name: cloudflare-config
              key: zone-id
        volumeMounts:
        - name: cloudflare-config
          mountPath: /etc/cloudflare
          readOnly: true
        - name: zone-config
          mountPath: /etc/zone
          readOnly: true
      volumes:
      - name: cloudflare-config
        secret:
          secretName: cloudflare-api-token
          items:
          - key: api-token
            path: token
      - name: zone-config
        configMap:
          name: cloudflare-config
      restartPolicy: OnFailure
