longhorn:
  preUpgradeChecker:
    jobEnabled: false
    upgradeVersionCheck: true
  persistence:
    defaultClass: true
    defaultClassReplicaCount: 1
  csi:
    kubeletRootDir: /var/lib/kubelet
  defaultSettings:
    defaultDataPath: /var/lib/longhorn/
    replicaSoftAntiAffinity: true
    storageOverProvisioningPercentage: 200
    storageMinimalAvailablePercentage: 25
    upgradeChecker: false
    defaultReplicaCount: 1
    guaranteedInstanceManagerCPU: 12
  # Configure the default backup target (S3-compatible: OCI Object Storage)
  defaultBackupStore:
    # Longhorn S3 URL format: s3://<bucket>@<region>/
    backupTarget: s3://homelab-ganam@il-jerusalem-1/
    # Reference to the Secret named below (create manually, not stored in git)
    backupTargetCredentialSecret: longhorn-oci-s3-secret
    # Seconds between polling the backupstore for new backups
    pollInterval: 300
  extraObjects:
    - apiVersion: v1
      kind: Service
      metadata:
        name: longhorn-ui
        labels:
          dns.service-controller.io/enabled: "true"
          dns.service-controller.io/hostname: "longhorn.buildin.group"
          exposure.service-controller.io/type: "internal"
      spec:
        type: ClusterIP
        ports:
          - name: http
            port: 80
            targetPort: 8000
        selector:
          app: longhorn-ui
    - apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: longhorn-ui
        annotations:
          kubernetes.io/ingress.class: nginx
      spec:
        rules:
          - host: longhorn.buildin.group
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: longhorn-ui
                      port:
                        number: 80

# Secret longhorn-oci-s3-secret will be created manually outside of git
